// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

//만드려는 모델

model User {
  id              Int               @id @unique @default(autoincrement())
  password        String
  user_name       String
  thumbnail_url   String            @default("https://holywater-blog.s3.ap-northeast-1.amazonaws.com/userProfile.png")
  email           String            @unique
  nickname        String            @unique
  posts           Posting[]
  markdown        Markdown[]
  Comment         PostingComment[]
  MarkdownComment MarkdownComment[]
  role            String            @default("visitor")
  GuestBook       GuestBook[]
}

model PostingTags {
  id        Int      @unique @default(autoincrement())
  tag       String
  Posting   Posting? @relation(fields: [postingId], references: [id], onDelete: Cascade)
  postingId Int?
}

model MarkdownTag {
  id         Int       @unique @default(autoincrement())
  tag        String
  Markdown   Markdown? @relation(fields: [markdownId], references: [id], onDelete: Cascade)
  markdownId Int?
}

model Posting {
  id       Int              @id @unique @default(autoincrement())
  title    String
  text     String
  tag      PostingTags[]
  img      PostingImg[]
  created  String
  comments PostingComment[]
  author   User?            @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id  Int
}

model PostingImg {
  id        Int      @id @unique @default(autoincrement())
  location  String   @unique
  Posting   Posting? @relation(fields: [postingId], references: [id], onDelete: Cascade)
  postingId Int?
}

model MarkdownImg {
  id         Int       @id @unique @default(autoincrement())
  location   String    @unique
  Markdown   Markdown? @relation(fields: [MarkdownId], references: [id], onDelete: Cascade)
  MarkdownId Int?
}

model Markdown {
  id          Int               @id @unique @default(autoincrement())
  title       String
  text        String
  created     String
  comments    MarkdownComment[]
  author      User?             @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id     Int
  MarkdownTag MarkdownTag[]
  MarkdownImg MarkdownImg[]
}

model PostingComment {
  id        Int      @id @unique @default(autoincrement())
  text      String
  user_id   Int
  writer    User?    @relation(fields: [user_id], references: [id], onDelete: Cascade)
  Posting   Posting? @relation(fields: [postingId], references: [id], onDelete: Cascade)
  postingId Int?
}

model MarkdownComment {
  id         Int       @id @unique @default(autoincrement())
  text       String
  user_id    Int
  writer     User?     @relation(fields: [user_id], references: [id], onDelete: Cascade)
  Markdown   Markdown? @relation(fields: [markdownId], references: [id], onDelete: Cascade)
  markdownId Int?
}

model GuestBook {
  id      Int    @id @unique @default(autoincrement())
  text    String
  user_id Int
  created String
  writer  User   @relation(fields: [user_id], references: [id], onDelete: Cascade)
}
